$date
	Wed Oct  1 00:20:09 2025
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module test $end
$var wire 8 ! regA_out [7:0] $end
$var wire 8 " regB_out [7:0] $end
$var wire 8 # alu_out_bus [7:0] $end
$var reg 1 $ add_test_failed $end
$var reg 1 % clk $end
$var reg 1 & mov_test_failed $end
$var reg 1 ' shl_test_failed $end
$scope module Comp $end
$var wire 1 % clk $end
$var wire 8 ( const0 [7:0] $end
$var wire 8 ) const1 [7:0] $end
$var wire 8 * dm_out_bus [7:0] $end
$var wire 8 + regB_out_bus [7:0] $end
$var wire 8 , regA_out_bus [7:0] $end
$var wire 4 - pc_out_bus [3:0] $end
$var wire 7 . opcode [6:0] $end
$var wire 8 / muxB_out_bus [7:0] $end
$var wire 8 0 muxA_out_bus [7:0] $end
$var wire 8 1 k8 [7:0] $end
$var wire 15 2 im_out_bus [14:0] $end
$var wire 3 3 alu_s_sig [2:0] $end
$var wire 8 4 alu_out_bus [7:0] $end
$var wire 2 5 SB_sig [1:0] $end
$var wire 2 6 SA_sig [1:0] $end
$var wire 1 7 LB_sig $end
$var wire 1 8 LA_sig $end
$scope module ALU $end
$var wire 3 9 s [2:0] $end
$var wire 8 : b [7:0] $end
$var wire 8 ; a [7:0] $end
$var reg 8 < out [7:0] $end
$upscope $end
$scope module CU $end
$var wire 1 8 LA $end
$var wire 1 7 LB $end
$var wire 2 = SA [1:0] $end
$var wire 2 > SB [1:0] $end
$var wire 3 ? alu_s [2:0] $end
$var wire 7 @ opcode [6:0] $end
$var reg 1 A la_r $end
$var reg 1 B lb_r $end
$var reg 3 C s_r [2:0] $end
$var reg 2 D sa_r [1:0] $end
$var reg 2 E sb_r [1:0] $end
$upscope $end
$scope module IM $end
$var wire 15 F out [14:0] $end
$var wire 4 G address [3:0] $end
$upscope $end
$scope module PC $end
$var wire 1 % clk $end
$var reg 4 H pc [3:0] $end
$upscope $end
$scope module muxA $end
$var wire 8 I e2 [7:0] $end
$var wire 8 J e3 [7:0] $end
$var wire 2 K sel [1:0] $end
$var wire 8 L e1 [7:0] $end
$var wire 8 M e0 [7:0] $end
$var reg 8 N out [7:0] $end
$upscope $end
$scope module muxB $end
$var wire 8 O e1 [7:0] $end
$var wire 8 P e2 [7:0] $end
$var wire 8 Q e3 [7:0] $end
$var wire 2 R sel [1:0] $end
$var wire 8 S e0 [7:0] $end
$var reg 8 T out [7:0] $end
$upscope $end
$scope module regA $end
$var wire 1 % clk $end
$var wire 8 U data [7:0] $end
$var wire 1 8 load $end
$var reg 8 V out [7:0] $end
$upscope $end
$scope module regB $end
$var wire 1 % clk $end
$var wire 8 W data [7:0] $end
$var wire 1 7 load $end
$var reg 8 X out [7:0] $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
$end
#0
$dumpvars
b0 X
b101010 W
b0 V
b101010 U
b101010 T
b0 S
b10 R
b0 Q
b101010 P
b0 O
b0 N
b0 M
b0 L
b11 K
b0 J
b1 I
b0 H
b0 G
b1000101010 F
b10 E
b11 D
b11 C
0B
1A
b10 @
b11 ?
b10 >
b11 =
b101010 <
b0 ;
b101010 :
b11 9
18
07
b11 6
b10 5
b101010 4
b11 3
b1000101010 2
b101010 1
b0 0
b101010 /
b10 .
b0 -
b0 ,
b0 +
b0 *
b1 )
b0 (
0'
0&
0%
0$
b101010 #
b0 "
b0 !
$end
#1
b1111011 #
b1111011 4
b1111011 <
b1111011 U
b1111011 W
b1111011 /
b1111011 :
b1111011 T
17
1B
b11 3
b11 9
b11 ?
b11 C
b10 5
b10 >
b10 R
b10 E
b11 6
b11 =
b11 K
b11 D
08
0A
b1111011 1
b1111011 P
b11 .
b11 @
b1101111011 2
b1101111011 F
b1 -
b1 G
b1 H
b101010 !
b101010 ,
b101010 M
b101010 V
1%
#2
0%
#3
b10 #
b10 4
b10 <
b10 U
b10 W
18
1A
b11 3
b11 9
b11 ?
b11 C
b10 5
b10 >
b10 R
b10 E
b11 6
b11 =
b11 K
b11 D
07
0B
b10 /
b10 :
b10 T
b10 1
b10 P
b10 .
b10 @
b1111011 "
b1111011 +
b1111011 L
b1111011 S
b1111011 X
b1000000010 2
b1000000010 F
b10 -
b10 G
b10 H
1%
#4
0%
#5
b11 #
b11 4
b11 <
b11 U
b11 W
b11 /
b11 :
b11 T
17
1B
b11 3
b11 9
b11 ?
b11 C
b10 5
b10 >
b10 R
b10 E
b11 6
b11 =
b11 K
b11 D
08
0A
b11 1
b11 P
b11 .
b11 @
b1100000011 2
b1100000011 F
b11 -
b11 G
b11 H
b10 !
b10 ,
b10 M
b10 V
1%
#6
0%
#7
b10 0
b10 ;
b10 N
b101 #
b101 4
b101 <
b101 U
b101 W
18
1A
b0 3
b0 9
b0 ?
b0 C
b0 5
b0 >
b0 R
b0 E
b0 6
b0 =
b0 K
b0 D
07
0B
b11 /
b11 :
b11 T
b0 1
b0 P
b100 .
b100 @
b11 "
b11 +
b11 L
b11 S
b11 X
b10000000000 2
b10000000000 F
b100 -
b100 G
b100 H
1%
#8
0%
#9
b101 /
b101 :
b101 T
b11 3
b11 9
b11 ?
b11 C
b10 5
b10 >
b10 R
b10 E
b11 6
b11 =
b11 K
b11 D
18
1A
b101 #
b101 4
b101 <
b101 U
b101 W
b101 1
b101 P
b10 .
b10 @
b0 0
b0 ;
b0 N
b1000000101 2
b1000000101 F
b101 -
b101 G
b101 H
b101 !
b101 ,
b101 M
b101 V
1%
#10
0%
#11
b1010 #
b1010 4
b1010 <
b1010 U
b1010 W
b101 0
b101 ;
b101 N
b11 /
b11 :
b11 T
b110 3
b110 9
b110 ?
b110 C
b0 5
b0 >
b0 R
b0 E
b0 6
b0 =
b0 K
b0 D
18
1A
b0 1
b0 P
b11100 .
b11100 @
b1110000000000 2
b1110000000000 F
b110 -
b110 G
b110 H
1%
#12
0%
#13
b0 3
b0 9
b0 ?
b0 C
08
0A
b1101 #
b1101 4
b1101 <
b1101 U
b1101 W
bx 1
bx P
bx .
bx @
b1010 0
b1010 ;
b1010 N
bx 2
bx F
b111 -
b111 G
b111 H
b1010 !
b1010 ,
b1010 M
b1010 V
1%
#14
0%
#15
b1000 -
b1000 G
b1000 H
1%
#16
0%
#17
b1001 -
b1001 G
b1001 H
1%
